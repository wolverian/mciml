
state 0:

	program : . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 10
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1
	program	goto 120

	.	error


state 1:

	exp : assign .  (reduce by rule 14)



	.	reduce by rule 14


state 2:

	exp : bin_op .  (reduce by rule 10)



	.	reduce by rule 10


state 3:

	exp : funcall .  (reduce by rule 13)



	.	reduce by rule 13


state 4:

	exp : for' .  (reduce by rule 9)



	.	reduce by rule 9


state 5:

	exp : while' .  (reduce by rule 8)



	.	reduce by rule 8


state 6:

	exp : if' .  (reduce by rule 7)



	.	reduce by rule 7


state 7:

	exp : let' .  (reduce by rule 6)



	.	reduce by rule 6


state 8:

	exp : rec_exp .  (reduce by rule 12)



	.	reduce by rule 12


state 9:

	exp : arr_exp .  (reduce by rule 11)



	.	reduce by rule 11


state 10:

	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20


	.	reduce by rule 0


state 11:

	exp : NIL .  (reduce by rule 1)



	.	reduce by rule 1


state 12:

	let' : LET . decs IN seq END 

	FUNCTION	shift 32
	VAR	shift 31
	TYPE	shift 30

	decs	goto 29
	dec	goto 28
	type_dec	goto 27
	var_dec	goto 26
	fun_dec	goto 25

	.	error


state 13:

	for' : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 33


	.	error


state 14:

	while' : WHILE . exp DO exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 34
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 15:

	if' : IF . exp THEN exp ELSE exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 35
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 16:

	exp : LPAREN . seq RPAREN 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 37
	arr_exp	goto 9
	rec_exp	goto 8
	seq	goto 36
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 17:

	exp : STRING .  (reduce by rule 3)



	.	reduce by rule 3


state 18:

	exp : INT .  (reduce by rule 2)



	.	reduce by rule 2


state 19:

	exp : ID .  (reduce by rule 4)
	arr_exp : ID . LBRACK exp RBRACK OF exp 
	rec_exp : ID . LBRACE field_exps RBRACE 
	funcall : ID . LPAREN params RPAREN 
	assign : ID . ASSIGN exp 
	assign : ID . DOT ID ASSIGN exp 

	LPAREN	shift 42
	LBRACK	shift 41
	LBRACE	shift 40
	DOT	shift 39
	ASSIGN	shift 38


	.	reduce by rule 4


state 20:

	bin_op : exp GT . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 43
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 21:

	bin_op : exp EQ . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 44
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 22:

	bin_op : exp TIMES . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 45
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 23:

	bin_op : exp MINUS . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 46
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 24:

	bin_op : exp PLUS . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 47
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 25:

	dec : fun_dec .  (reduce by rule 40)



	.	reduce by rule 40


state 26:

	dec : var_dec .  (reduce by rule 39)



	.	reduce by rule 39


state 27:

	dec : type_dec .  (reduce by rule 38)



	.	reduce by rule 38


state 28:

	decs : dec . decs 
	decs : dec .  (reduce by rule 37)

	FUNCTION	shift 32
	VAR	shift 31
	TYPE	shift 30

	decs	goto 48
	dec	goto 28
	type_dec	goto 27
	var_dec	goto 26
	fun_dec	goto 25

	.	reduce by rule 37


state 29:

	let' : LET decs . IN seq END 

	IN	shift 49


	.	error


state 30:

	type_dec : TYPE . ID EQ ID 
	type_dec : TYPE . ID EQ ARRAY OF ID 
	type_dec : TYPE . ID EQ LBRACE field_decs RBRACE 

	ID	shift 50


	.	error


state 31:

	var_dec : VAR . ID COLON ID ASSIGN exp 
	var_dec : VAR . ID ASSIGN exp 

	ID	shift 51


	.	error


state 32:

	fun_dec : FUNCTION . ID LPAREN field_decs RPAREN EQ exp 
	fun_dec : FUNCTION . ID LPAREN field_decs RPAREN COLON ID EQ exp 

	ID	shift 52


	.	error


state 33:

	for' : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 53


	.	error


state 34:

	while' : WHILE exp . DO exp 
	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20
	DO	shift 54


	.	error


state 35:

	if' : IF exp . THEN exp ELSE exp 
	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20
	THEN	shift 55


	.	error


state 36:

	exp : LPAREN seq . RPAREN 

	RPAREN	shift 56


	.	error


state 37:

	seq : exp . SEMICOLON seq 
	seq : exp .  (reduce by rule 35)
	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 

	SEMICOLON	shift 57
	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20


	.	reduce by rule 35


state 38:

	assign : ID ASSIGN . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 58
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 39:

	assign : ID DOT . ID ASSIGN exp 

	ID	shift 59


	.	error


state 40:

	rec_exp : ID LBRACE . field_exps RBRACE 

	ID	shift 62

	field_exps	goto 61
	field_exp	goto 60

	.	error


state 41:

	arr_exp : ID LBRACK . exp RBRACK OF exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 63
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 42:

	funcall : ID LPAREN . params RPAREN 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 65
	arr_exp	goto 9
	rec_exp	goto 8
	params	goto 64
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 43:

	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 
	bin_op : exp GT exp .  (reduce by rule 33)

	EOF	reduce by rule 33
	COMMA	reduce by rule 33
	SEMICOLON	reduce by rule 33
	RPAREN	reduce by rule 33
	RBRACK	reduce by rule 33
	RBRACE	reduce by rule 33
	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	THEN	reduce by rule 33
	ELSE	reduce by rule 33
	TO	reduce by rule 33
	DO	reduce by rule 33
	IN	reduce by rule 33
	END	reduce by rule 33
	FUNCTION	reduce by rule 33
	VAR	reduce by rule 33
	TYPE	reduce by rule 33


	.	error


state 44:

	bin_op : exp . EQ exp 
	bin_op : exp EQ exp .  (reduce by rule 29)
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 

	EOF	reduce by rule 29
	COMMA	reduce by rule 29
	SEMICOLON	reduce by rule 29
	RPAREN	reduce by rule 29
	RBRACK	reduce by rule 29
	RBRACE	reduce by rule 29
	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	THEN	reduce by rule 29
	ELSE	reduce by rule 29
	TO	reduce by rule 29
	DO	reduce by rule 29
	IN	reduce by rule 29
	END	reduce by rule 29
	FUNCTION	reduce by rule 29
	VAR	reduce by rule 29
	TYPE	reduce by rule 29


	.	error


state 45:

	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp TIMES exp .  (reduce by rule 32)
	bin_op : exp . GT exp 



	.	reduce by rule 32


state 46:

	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp MINUS exp .  (reduce by rule 30)
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 

	TIMES	shift 22


	.	reduce by rule 30


state 47:

	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp PLUS exp .  (reduce by rule 31)
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 

	TIMES	shift 22


	.	reduce by rule 31


state 48:

	decs : dec decs .  (reduce by rule 36)



	.	reduce by rule 36


state 49:

	let' : LET decs IN . seq END 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 37
	arr_exp	goto 9
	rec_exp	goto 8
	seq	goto 66
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 50:

	type_dec : TYPE ID . EQ ID 
	type_dec : TYPE ID . EQ ARRAY OF ID 
	type_dec : TYPE ID . EQ LBRACE field_decs RBRACE 

	EQ	shift 67


	.	error


state 51:

	var_dec : VAR ID . COLON ID ASSIGN exp 
	var_dec : VAR ID . ASSIGN exp 

	COLON	shift 69
	ASSIGN	shift 68


	.	error


state 52:

	fun_dec : FUNCTION ID . LPAREN field_decs RPAREN EQ exp 
	fun_dec : FUNCTION ID . LPAREN field_decs RPAREN COLON ID EQ exp 

	LPAREN	shift 70


	.	error


state 53:

	for' : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 71
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 54:

	while' : WHILE exp DO . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 72
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 55:

	if' : IF exp THEN . exp ELSE exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 73
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 56:

	exp : LPAREN seq RPAREN .  (reduce by rule 5)



	.	reduce by rule 5


state 57:

	seq : exp SEMICOLON . seq 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 37
	arr_exp	goto 9
	rec_exp	goto 8
	seq	goto 74
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 58:

	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 
	assign : ID ASSIGN exp .  (reduce by rule 15)

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20


	.	reduce by rule 15


state 59:

	assign : ID DOT ID . ASSIGN exp 

	ASSIGN	shift 75


	.	error


state 60:

	field_exps : field_exp . COMMA field_exps 
	field_exps : field_exp .  (reduce by rule 20)

	COMMA	shift 76


	.	reduce by rule 20


state 61:

	rec_exp : ID LBRACE field_exps . RBRACE 

	RBRACE	shift 77


	.	error


state 62:

	field_exp : ID . EQ exp 

	EQ	shift 78


	.	error


state 63:

	arr_exp : ID LBRACK exp . RBRACK OF exp 
	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 

	RBRACK	shift 79
	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20


	.	error


state 64:

	funcall : ID LPAREN params . RPAREN 

	RPAREN	shift 80


	.	error


state 65:

	params : exp . COMMA params 
	params : exp .  (reduce by rule 24)
	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 

	COMMA	shift 81
	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20


	.	reduce by rule 24


state 66:

	let' : LET decs IN seq . END 

	END	shift 82


	.	error


state 67:

	type_dec : TYPE ID EQ . ID 
	type_dec : TYPE ID EQ . ARRAY OF ID 
	type_dec : TYPE ID EQ . LBRACE field_decs RBRACE 

	ID	shift 85
	LBRACE	shift 84
	ARRAY	shift 83


	.	error


state 68:

	var_dec : VAR ID ASSIGN . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 86
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 69:

	var_dec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 87


	.	error


state 70:

	fun_dec : FUNCTION ID LPAREN . field_decs RPAREN EQ exp 
	fun_dec : FUNCTION ID LPAREN . field_decs RPAREN COLON ID EQ exp 

	ID	shift 90

	field_decs	goto 89
	field_dec	goto 88

	.	error


state 71:

	for' : FOR ID ASSIGN exp . TO exp DO exp 
	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20
	TO	shift 91


	.	error


state 72:

	while' : WHILE exp DO exp .  (reduce by rule 27)
	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20


	.	reduce by rule 27


state 73:

	if' : IF exp THEN exp . ELSE exp 
	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20
	ELSE	shift 92


	.	error


state 74:

	seq : exp SEMICOLON seq .  (reduce by rule 34)



	.	reduce by rule 34


state 75:

	assign : ID DOT ID ASSIGN . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 93
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 76:

	field_exps : field_exp COMMA . field_exps 

	ID	shift 62

	field_exps	goto 94
	field_exp	goto 60

	.	error


state 77:

	rec_exp : ID LBRACE field_exps RBRACE .  (reduce by rule 18)



	.	reduce by rule 18


state 78:

	field_exp : ID EQ . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 95
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 79:

	arr_exp : ID LBRACK exp RBRACK . OF exp 

	OF	shift 96


	.	error


state 80:

	funcall : ID LPAREN params RPAREN .  (reduce by rule 22)



	.	reduce by rule 22


state 81:

	params : exp COMMA . params 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 65
	arr_exp	goto 9
	rec_exp	goto 8
	params	goto 97
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 82:

	let' : LET decs IN seq END .  (reduce by rule 25)



	.	reduce by rule 25


state 83:

	type_dec : TYPE ID EQ ARRAY . OF ID 

	OF	shift 98


	.	error


state 84:

	type_dec : TYPE ID EQ LBRACE . field_decs RBRACE 

	ID	shift 90

	field_decs	goto 99
	field_dec	goto 88

	.	error


state 85:

	type_dec : TYPE ID EQ ID .  (reduce by rule 43)



	.	reduce by rule 43


state 86:

	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 
	var_dec : VAR ID ASSIGN exp .  (reduce by rule 42)

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20


	.	reduce by rule 42


state 87:

	var_dec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 100


	.	error


state 88:

	field_decs : field_dec . COMMA field_decs 
	field_decs : field_dec .  (reduce by rule 47)

	COMMA	shift 101


	.	reduce by rule 47


state 89:

	fun_dec : FUNCTION ID LPAREN field_decs . RPAREN EQ exp 
	fun_dec : FUNCTION ID LPAREN field_decs . RPAREN COLON ID EQ exp 

	RPAREN	shift 102


	.	error


state 90:

	field_dec : ID . COLON ID 

	COLON	shift 103


	.	error


state 91:

	for' : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 104
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 92:

	if' : IF exp THEN exp ELSE . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 105
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 93:

	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 
	assign : ID DOT ID ASSIGN exp .  (reduce by rule 16)

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20


	.	reduce by rule 16


state 94:

	field_exps : field_exp COMMA field_exps .  (reduce by rule 19)



	.	reduce by rule 19


state 95:

	field_exp : ID EQ exp .  (reduce by rule 21)
	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20


	.	reduce by rule 21


state 96:

	arr_exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 106
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 97:

	params : exp COMMA params .  (reduce by rule 23)



	.	reduce by rule 23


state 98:

	type_dec : TYPE ID EQ ARRAY OF . ID 

	ID	shift 107


	.	error


state 99:

	type_dec : TYPE ID EQ LBRACE field_decs . RBRACE 

	RBRACE	shift 108


	.	error


state 100:

	var_dec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 109
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 101:

	field_decs : field_dec COMMA . field_decs 

	ID	shift 90

	field_decs	goto 110
	field_dec	goto 88

	.	error


state 102:

	fun_dec : FUNCTION ID LPAREN field_decs RPAREN . EQ exp 
	fun_dec : FUNCTION ID LPAREN field_decs RPAREN . COLON ID EQ exp 

	COLON	shift 112
	EQ	shift 111


	.	error


state 103:

	field_dec : ID COLON . ID 

	ID	shift 113


	.	error


state 104:

	for' : FOR ID ASSIGN exp TO exp . DO exp 
	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20
	DO	shift 114


	.	error


state 105:

	if' : IF exp THEN exp ELSE exp .  (reduce by rule 26)
	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20


	.	reduce by rule 26


state 106:

	arr_exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 17)
	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20


	.	reduce by rule 17


state 107:

	type_dec : TYPE ID EQ ARRAY OF ID .  (reduce by rule 44)



	.	reduce by rule 44


state 108:

	type_dec : TYPE ID EQ LBRACE field_decs RBRACE .  (reduce by rule 45)



	.	reduce by rule 45


state 109:

	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 
	var_dec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 41)

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20


	.	reduce by rule 41


state 110:

	field_decs : field_dec COMMA field_decs .  (reduce by rule 46)



	.	reduce by rule 46


state 111:

	fun_dec : FUNCTION ID LPAREN field_decs RPAREN EQ . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 115
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 112:

	fun_dec : FUNCTION ID LPAREN field_decs RPAREN COLON . ID EQ exp 

	ID	shift 116


	.	error


state 113:

	field_dec : ID COLON ID .  (reduce by rule 48)



	.	reduce by rule 48


state 114:

	for' : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 117
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 115:

	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 
	fun_dec : FUNCTION ID LPAREN field_decs RPAREN EQ exp .  (reduce by rule 49)

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20


	.	reduce by rule 49


state 116:

	fun_dec : FUNCTION ID LPAREN field_decs RPAREN COLON ID . EQ exp 

	EQ	shift 118


	.	error


state 117:

	for' : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 28)
	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20


	.	reduce by rule 28


state 118:

	fun_dec : FUNCTION ID LPAREN field_decs RPAREN COLON ID EQ . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 119
	arr_exp	goto 9
	rec_exp	goto 8
	let'	goto 7
	if'	goto 6
	while'	goto 5
	for'	goto 4
	funcall	goto 3
	bin_op	goto 2
	assign	goto 1

	.	error


state 119:

	bin_op : exp . EQ exp 
	bin_op : exp . MINUS exp 
	bin_op : exp . PLUS exp 
	bin_op : exp . TIMES exp 
	bin_op : exp . GT exp 
	fun_dec : FUNCTION ID LPAREN field_decs RPAREN COLON ID EQ exp .  (reduce by rule 50)

	PLUS	shift 24
	MINUS	shift 23
	TIMES	shift 22
	EQ	shift 21
	GT	shift 20


	.	reduce by rule 50


state 120:


	EOF	accept


	.	error

204 of 571 action table entries left after compaction
306 goto table entries
